name: appimage2deb-ubuntu2204

on: workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  # This yml is copied from https://github.com/hn-88/OCVWarp/blob/master/.github/workflows/cmake-nix.yml
  # and modified.
  BUILD_TYPE: Release
  # As recommended here: https://github.com/marketplace/actions/sccache-action
  OPENSPACE_VERSION: "0.21.0"
  APPIMAGE_VERSION: "1"
  
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    
    - name: get openspace appimage for a particular release
      # https://github.com/zhiyuan1i/appimage2deb
      # https://github.com/hn-88/OpenSpace-AppImage
      # https://www.reddit.com/r/linuxquestions/comments/nb0x1m/how_to_convert_appimages_to_deb_files/
      run: |
        echo "Downloading appimage ..."
        # wget https://github.com/hn-88/OpenSpace-AppImage/releases/download/${OPENSPACE_VERSION}-${APPIMAGE_VERSION}/OpenSpace-${OPENSPACE_VERSION}-${APPIMAGE_VERSION}-x86_64.AppImage
        wget https://github.com/hn-88/OpenSpace-AppImage/releases/download/v${OPENSPACE_VERSION}-${APPIMAGE_VERSION}/OpenSpace-${OPENSPACE_VERSION}-wayland-workaround-${APPIMAGE_VERSION}-x86_64.AppImage
                     
        echo "Converting appimage to deb ..."
        chmod +x ./OpenSpace-*.AppImage
        
    - name: extract appimage contents
      run: |       
        echo "Extracting ..."
        ./OpenSpace-*.AppImage --appimage-extract

    - name: Install the dependencies used while building appimage
      run: |
        sudo apt-get update
        sudo apt-get install glew-utils libpng-dev freeglut3-dev git libxrandr-dev libxinerama-dev xorg-dev libxcursor-dev libcurl4-openssl-dev libxi-dev libasound2-dev libgdal-dev libboost1.74-dev qt6-base-dev libmpv-dev libvulkan-dev
        sudo apt install software-properties-common
        sudo apt-get install libasound2 libasound2-data libasound2-plugins
        
    - name: create deb file with dpkg-deb
      # https://github.com/zhiyuan1i/appimage2deb
      # https://github.com/hn-88/OpenSpace-AppImage
      # https://www.reddit.com/r/linuxquestions/comments/nb0x1m/how_to_convert_appimages_to_deb_files/
      run: |
        echo "Create DEB dir ..."
        mv -v squashfs-root OpenSpace
        mkdir -p OpenSpace/DEBIAN 
        echo "Package: OpenSpace" > OpenSpace/DEBIAN/control 
        echo "Version: ${OPENSPACE_VERSION}-${APPIMAGE_VERSION}" >> OpenSpace/DEBIAN/control 
        echo "Section: base" >> OpenSpace/DEBIAN/control 
        echo "Priority: optional" >> OpenSpace/DEBIAN/control 
        echo "Architecture: all" >> OpenSpace/DEBIAN/control 
        echo "Maintainer: hn-88 <hn-88@users.noreply.github.com>" >> OpenSpace/DEBIAN/control 
        echo "Description: OpenSpace is an open source, non-commercial, and freely available interactive data visualization software designed to visualize the entire known universe and portray our ongoing efforts to investigate the cosmos. This is an unofficial deb package." >> OpenSpace/DEBIAN/control 
        # dpkg-deb --build OpenSpace

    - name: update deb dependencies
      run: |
        # https://github.com/hn-88/OpenSpace-deb/issues/3

    - name: Copy into package layout
      run: |
        mkdir -p pkg/usr
        cp -r OpenSpace/* pkg/usr

    - name: Detect and remove system-owned files, record dependencies
      id: filter_syslibs
      run: |
        STAGED=pkg
        DEPS=()
        TMPFILE=$(mktemp)
        while IFS= read -r file; do
          owner=$(dpkg -S "$file" 2>/dev/null | head -n1 | cut -d: -f1)
          if [ -n "$owner" ]; then
            echo "System file detected: $file (owned by $owner)"
            echo "System file detected: $file (owned by $owner)" >> "$TMPFILE"
            DEPS+=("$owner")
            rm -f "$STAGED/$file"
          fi
        done < <(find "$STAGED" -type f | sed "s|^$STAGED/||")
        # Deduplicate and join as comma-separated list
        UNIQUE_DEPS=$(printf '%s\n' "${DEPS[@]}" | sort -u | paste -sd, -)

        echo "deps=$UNIQUE_DEPS" >> "$GITHUB_OUTPUT"
        echo "removed_list=$(wc -l < "$TMPFILE")" >> "$GITHUB_OUTPUT"

    - name: Save filtered dependency info to files
      run: |
        echo "${{ steps.filter_syslibs.outputs.deps }}" > filtered-deps.txt
        echo "${{ steps.filter_syslibs.outputs.removed_list }}" > removed-files-count.txt

    - name: Upload dependency info artifact
      uses: actions/upload-artifact@v4
      with:
        name: openspace-deb-filtered-dependencies
        path: |
          filtered-deps.txt
          removed-files-count.txt

    - name: Create DEBIAN/control file with dependencies
      run: |
        mkdir -p pkg/DEBIAN
        echo "Package: openspace" > pkg/DEBIAN/control
        echo "Version: 0.21.0-1" >> pkg/DEBIAN/control
        echo "Section: graphics" >> pkg/DEBIAN/control
        echo "Priority: optional" >> pkg/DEBIAN/control
        echo "Architecture: amd64" >> pkg/DEBIAN/control
        echo "Maintainer: hn-88 <hn-88@users.noreply.github.com>" >> pkg/DEBIAN/control
        echo "Depends: ${{ steps.filter_syslibs.outputs.deps }}" >> pkg/DEBIAN/control
        echo "Description: OpenSpace astronomy visualization tool" >> pkg/DEBIAN/control
        
        echo "Packages removed due to system ownership: ${{ steps.filter_syslibs.outputs.removed_list }}"

    - name: Build the .deb
      run: |
        dpkg-deb --build pkg OpenSpace-0.21.0-1.deb
        

    - name: Upload deb Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: OpenSpace-deb
        # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: OpenSpace*.deb

    - name: Upload to github release draft
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "OpenSpace*.deb"
        draft: true
            
          
